<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[function ($scope, $timeout, $element){
	var eventNames = {
		setBreadcrumbs: 'widget-filter-breadcrumbs.setBreadcrumbs'
	};

	$scope.adjustFilter = function(breadcrumb, remove){
		var newQuery = remove ? breadcrumb.ifRemoved : breadcrumb.value;
		$scope.$emit('widget-filter-breadcrumbs.queryModified', newQuery);
	}

	$scope.$on(eventNames.setBreadcrumbs, function(e, data, newQuery){
		$scope.data = data;
		$scope.$broadcast("snfilter:initialize_query", massageEncodedQuery(newQuery));
	});

	$scope.clickFilter = function() {
		$scope.showFilter = !$scope.showFilter;
		$scope.filterMsg = $scope.showFilter ? $scope.data.hideMsg: $scope.data.showMsg;
	}

	$scope.showFilter = false;
	$scope.filterMsg = $scope.data.showMsg;
	$scope.$on("snbreadcrumbs:toggle_filter", function(e) {
		e.stopPropagation();
		e.preventDefault();
		$scope.showFilter = false;
		$scope.filterMsg = $scope.data.showMsg;
		$element.find('#filterToggle').focus();
		
	});

	$scope.$on("snfilter:update_query", function(e, query) {
		e.stopPropagation();
		e.preventDefault();
		$scope.$emit('widget-filter-breadcrumbs.queryModified', massageEncodedQuery(query));
		$scope.showFilter = false;
		$scope.filterMsg = $scope.data.showMsg;
	});

	$scope.$on("snfilter:run_filter", function(e) {
		$element.find('#filterToggle').focus();
	});

	function massageEncodedQuery(query) {
		return (query) ? query.replace(/CONTAINS/g, "LIKE").replace(/DOES NOT CONTAIN/g, "NOT LIKE") : query;
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.breadcrumbs {
  margin-left: 9px;
  margin-bottom: 3px;
}

.icon-filter {
  font-size: 20px;
  text-decoration: inherit; /* no underline */
}

.ng-filter-widget {
  position: static;

  .modal {
    .manage-filters-button {
      top: 15px;
    }

    .input-group-radio {
      input {
        margin-left: 0;
      }
    }

    .input-group-transparent {
      position: relative;

      .input-group-addon-transparent {
        position: absolute;
        font-size: 18px;
        top: 2px;
        left: 8px;
      }

      input {
        border-radius: 9999px;
        padding-left: 28px;
      }
    }

    ul {
      padding: 0 5px 10px;

      li {
        button {
          background-color: inherit;
        }

        a {
          width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          display: block;
          padding: 7px 20px;
          text-decoration: none;
          cursor: pointer;
        }
      }
    }
  }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>tabbed-filter-breadcrumbs-v2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Tabbed Filter Breadcrumbs v2</name>
        <option_schema>[{"hint":"Table to be used to generate breadcrumbs","name":"table","section":"Data","label":"Table","type":"string"},{"name":"query","section":"Data","label":"Query","type":"string"},{"hint":"If enabled, a filter button prompt will be added to the breadcrumb list","name":"enable_filter","default_value":"false","section":"Behavior","label":"Enable Filter","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	var table = options.table || input.table;
	var query = options.query || input.query || "";
	var uid = options.uid || input.table;
	data.breadcrumbs = $sp.getFilterBreadcrumbs(table, query, null);
	data.enable_filter = input.enable_filter || options.enable_filter == true || options.enable_filter == "true";
	data.showMsg = gs.getMessage('Show filter');
	data.hideMsg = gs.getMessage('Hide filter');

	if (data.enable_filter)
		data.filterWidget = $sp.getWidget('tabbed-desktop-filter-v2', {
			table: table,
			initialQuery : query,
			uid: uid
		});

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-14 11:34:42</sys_created_on>
        <sys_id>2735f0812f0121101b6051072799b6ef</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Tabbed Filter Breadcrumbs v2</sys_name>
        <sys_package display_value="Tabbed Form v2" source="bca11b732f0501101b6051072799b6cc">bca11b732f0501101b6051072799b6cc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Tabbed Form v2">bca11b732f0501101b6051072799b6cc</sys_scope>
        <sys_update_name>sp_widget_2735f0812f0121101b6051072799b6ef</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-14 12:16:12</sys_updated_on>
        <template><![CDATA[<div class="breadcrumbs">
  <button type="button"
          role="button"
          id="filterToggle"
          ng-show="data.enable_filter"
          ng-click="clickFilter()"
          title="{{filterMsg}}"
          class="icon-filter btn btn-link"
          tabindex="0"
          data-original-title="{{filterMsg}}"
          aria-expanded="{{showFilter}}"><span class="sr-only">{{filterMsg}}</span></button>
  <span ng-repeat="crumb in data.breadcrumbs track by crumb.value">
    <a href="javascript:void(0)" ng-if="!$first" class="sp-breadcrumb-link sp-breadcrumb-remove-condition" ng-click="adjustFilter(crumb, true)" aria-label="${Remove next condition} {{crumb.label}}" title="${Remove next condition}" data-toggle="tooltip" data-placement="bottom">&gt;</a>
    <a href="javascript:void(0)" class="sp-breadcrumb-link" ng-click="adjustFilter(crumb, false)">{{crumb.label}}</a>
  </span>
</div>

<div ng-if="data.enable_filter">
  <span ng-show="showFilter">
    <sp-widget widget="data.filterWidget"></sp-widget>
  </span>
</div>]]></template>
    </sp_widget>
</record_update>
